---
import { promises as fs } from 'fs';
import path from 'path';

import Layout from '#layouts/Layout';
import Hero from '#components/Hero';
import Pagination from '#components/Pagination';
import PreviewList from '#components/PreviewList';
import Chips from '#components/Chips';

export async function getStaticPaths() {
  const pagePath = path.join(
    process.cwd(),
    '.content',
    'pages',
    '[lang]',
    '[...listing].json'
  );
  const pageData = await fs.readFile(pagePath, 'utf8').then(JSON.parse);
  return Object.values(pageData).map(({ params, props }) => {
    return {
      params: {
        lang: params.lang,
        listing: params.listing.join('/'),
      },
      props,
    };
  });
}

const {
  slug,
  pagination = null,
  collection,
  collectionItems,
  largeImages = false,
  pageDescription,
  structuredData,
} = Astro.props;
---

<Layout
  title={structuredData ? structuredData.name : collection.title}
  description={pageDescription}
  logoSrc={collection.cover ? collection.cover : undefined}
  structuredData={structuredData}
  canonical={slug}
>
  <main slot='main-content'>
    <Hero
      title={collection.title}
      description={collection.content}
      cover={collection.cover}
      coverSrcset={collection.coverSrcset}
    />
    {
      collection.sublinks.length ? (
        <Chips items={collection.sublinks} />
      ) : <div aria-hidden='true' data-area-gap />
    }
    <PreviewList contentItems={collectionItems} largeImages={largeImages}>
      {pagination ? <Pagination pagination={pagination} slot='bottom-nav' /> : null}
    </PreviewList>
  </main>
</Layout>
